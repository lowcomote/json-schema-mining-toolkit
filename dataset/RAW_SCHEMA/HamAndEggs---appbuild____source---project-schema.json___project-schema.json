{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "http://example.com/example.json",
    "type": "object",
    "title": "The root schema",
    "description": "The root schema comprises the entire JSON document.",
    "required": [
        "source_files"
    ],
    "additionalProperties": true,
    "properties": {
        "configurations": {
            "description": "A build configuration for the project, such as a release build.",
            "type": "object",
            "additionalProperties": true,
            "properties": {
                "include": {
                    "description": "The include paths for the compiler to search on.",
                    "type":"array",
                    "items":{
                        "type":"string"
                    }
                },
                "libpaths": {
                    "description": "The paths for the linker to search on.",
                    "type":"array",
                    "items":{
                        "type":"string"
                    }
                },
                "libs": {
                    "description": "The libraries to link against.",
                    "type":"array",
                    "items":{
                        "type":"string"
                    }
                },
                "define": {
                    "description": "The configuration specific defines.",
                    "type":"array",
                    "items":{
                        "type":"string"
                    }
                },
                "output_path": {
                    "description": "The path to where the output is written.",
                    "type":"string"
                },
                "target": {
                    "description": "The target type of the configuration, executable or library.",
                    "type":"string",
                    "enum":["executable", "library", "sharedlibrary"]
                },
                "optimisation":
                {
                    "description": "The compiler optimisation to use. Uses the -o option.",
                    "type":"string"
                },
                "debug_level":
                {
                    "description": "The debug level we want, 0 -> 2. 2 is full debug level. Uses the -g option.",
                    "type":"string"
                },
                "gtk_version":
                {
                    "description": "To build with GTK pkg-config needs to be ran to discover all the file paths and lib names. (tut tut) This option will do it for you. E.G pkg-config --libs gtkmm-3,0",
                    "type":"string"
                },
                "standard":
                {
                    "description": "This C++ standard to build too, EG c++14",
                    "type":"string"
                },
                "warnings_as_errors":
                {
                    "description": "States if the compiler should consider warnings as errors. Uses -Werror",
                    "type":"boolean"
                },
                "enable_all_warnings":
                {
                    "description": "States if the compiler should use all warning modes. Uses -Wall",
                    "type":"boolean"
                },
                "fatal_errors":
                {
                    "description": "This is very useful. Causes the compiler to abort compilation on the first error occurred rather than trying to keep going and printing further error messages.",
                    "type":"boolean"
                },
                "dependencies":
                {
                    "description": "A list of external projects that this configuration is dependant on. They will be build before this one is.",
                    "type":"array",
                    "items":{
                        "type":"string"
                    }
                },
                "source_files": {
                    "description": "A list of source files that are common JUST this configuration.",
                    "type": "array",
                    "items":{
                        "type":"string"
                    }
                }
            }
        },
        "source_files": {
            "description": "A list of source files that are common to all configurations. This is where the majority of the source will be listed.",
            "type": "array",
            "items":{
                "type":"string"
            }
        },
        "version":{
            "description": "Version of the application or the library. Format is the standard Major.Minor.BugFix 8.8.16 format. Three numbers only. Will generate a define APP_BUILD_VERSION as a string. Only valid for the project that it is built with.",
            "type": "string"
        }
    }
}
